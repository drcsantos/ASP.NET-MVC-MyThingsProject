@model MyThings.Web.Models.Person

@{
    ViewBag.Title = "Editar Amigo";
}
<div class="row">
    <h2>@ViewBag.Title</h2>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.PersonID)
        <div class="row">
            <div class="col-lg-12 form-group">
                @Html.LabelFor(m => m.ImageLink, htmlAttributes: new { @class = "control-label" })
                <div class="input-group col-lg-12">
                    <span class="input-group-addon"><i class="glyphicon glyphicon-link"></i></span>
                    @Html.TextBoxFor(m => m.ImageLink, new { @class = "form-control" })
                    <span class="input-group-btn">
                        <button data-paste-to="#ImageLink" class="btn btn-default" type="button"><i class="glyphicon glyphicon-paste"></i></button>
                    </span>
                </div>
                @Html.ValidationMessageFor(m => m.ImageLink, "", new { @class = "text-danger" })
            </div>
            <div class="col-sm-12 col-lg-6 form-group">
                @Html.LabelFor(m => m.Name, htmlAttributes: new { @class = "control-label" })
                @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
            </div>
            <div class="col-sm-12 col-lg-6 form-group">
                @Html.LabelFor(m => m.NickName, htmlAttributes: new { @class = "control-label" })
                @Html.TextBoxFor(m => m.NickName, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.NickName, "", new { @class = "text-danger" })
            </div>
        </div>
        <input type="submit" value="Salvar" class="btn btn-primary" />
        @Html.ActionLink("Voltar à Meus Amigos", "Index", null, new { @class = "btn btn-default" })
    }
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

